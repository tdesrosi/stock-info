<%- include("header") -%>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://d3js.org/d3.v5.min.js"></script>

<script listItems="<%= [newListItems] %>" memNamesArray="<%= [memberNamesArray] %>"
    memBigsArray="<%= [memberBigsArray] %>" memLittlesArray="<%= [memberLittlesArray] %>"
    memGradArray="<%= [memberGradArray] %>" memInitArray="<%= [memberInitArray] %>">
        //Building data structure and parsing through for variables

        var listItems = document.currentScript.getAttribute('listItems').split(',');
        var memberNamesArray = document.currentScript.getAttribute('memNamesArray').split(',');
        var memberBigsArray = document.currentScript.getAttribute('memBigsArray').split(',');
        var memberLittlesArray = document.currentScript.getAttribute('memLittlesArray').split(',');
        var memberGradArray = document.currentScript.getAttribute('memGradArray').split(',');
        var memberInitArray = document.currentScript.getAttribute('memInitArray').split(',');

        //Building Array for tree building

        var data = [{"child" : "tree_root", "parent" : ""}, {"child" : "Michael Gupta", "parent" : "tree_root"}];
        for (var i = 0; i < memberNamesArray.length; i++) {
            var child = memberNamesArray[i];
            var parent = memberBigsArray[i];
            var little = memberLittlesArray[i];
            var gradDate = memberGradArray[i];
            var initDate = memberInitArray[i];

            var memberNode = {
                "child": child,
                "parent": parent,
                "little": little,
                "grad_year": gradDate,
                "init_year": initDate
            };

            data.push(memberNode);
            console.log(data);
            
        };

        //Set size of SVG and begin render

        var w = window.innerWidth;
        var h = window.innerHeight;

        var svg = d3.select("body").insert("svg")
            .attr("width", w)
            .attr("height", h)
            .append("g").attr("transform", "translate(50, 50)");

        var dataStructure = d3.stratify()
            .id(function (d) { return d.child; })
            .parentId(function (d) { return d.parent; })
            (data);

        var treeStructure = d3.tree().size([w / 2, h / 2]);
        var information = treeStructure(dataStructure);

        //Create and Enter the Connecting Lines

        var connections = svg.append("g").selectAll("path")
            .data(information.links());

        connections.enter().append("path")
            .attr("d", function (d) {
                return "M" + d.source.x + "," + d.source.y + " C " +
                    d.source.x + "," + (d.source.y + d.target.y) / 2 + " " +
                    d.target.x + "," + (d.source.y + d.target.y) / 2 + " " +
                    d.target.x + "," + d.target.y;
            });

        //Create and Enter the Circles Themselves

        var circles = svg.append("g").selectAll("circle")
            .data(information.descendants());

        circles.enter().append("circle")
            .attr("cx", function (d) { return d.x; })
            .attr("cy", function (d) { return d.y; })
            .attr("r", 5);

        //Parse the Names from the datafile

        var names = svg.append("g").selectAll("text")
            .data(information.descendants());


        //Build variables to use to calculate the correct height and width of the svg pane

        //Draw the names to the right of the circles

        names.enter().append("text")
            .text(function (d) {
                return d.data.child;
            })
            .attr("x", function (d) {
                return d.x + 10;
            })
            .attr("y", function (d) {
                return d.y + 3;
            });


        names.enter().append("text")
            .text(function (d) {
                return "Initiated: " + d.data.initDate;
            })
            .attr("x", function (d) {
                return d.x + 10;
            })
            .attr("y", function (d) {
                return d.y + 20;
            });

        names.enter().append("text")
            .text(function (d) {
                return "Graduated: " + d.data.gradDate;
            })
            .attr("x", function (d) {
                return d.x + 10;
            })
            .attr("y", function (d) {
                return d.y + 37;
            });


        function hoverWindow(element) {

        };


    </script>


<%-  include("footer") -%>